#!/bin/bash
# Bash wrappers for docker run commands
alias dl='docker ps -l -q'

dcleanup(){
    local containers
    containers=( $(docker ps -aq 2>/dev/null) )
    docker rm "${containers[@]}" 2>/dev/null
    local volumes
    volumes=( $(docker ps --filter status=exited -q 2>/dev/null) )
    docker rm -v "${volumes[@]}" 2>/dev/null
    local images
    images=( $(docker images --filter dangling=true -q 2>/dev/null) )
    docker rmi "${images[@]}" 2>/dev/null
}

del_stopped(){
    local name=$1
    local state
    state=$(docker inspect --format "{{.State.Running}}" "$name" 2>/dev/null)
    if [[ "$state" == "false" ]]; then
        docker rm "$name"
    fi
}

relies_on(){
    for container in "$@"; do
        local state
        state=$(docker inspect --format "{{.State.Running}}" "$container" 2>/dev/null)
        if [[ "$state" == "false" ]] || [[ "$state" == "" ]]; then
            echo "$container is not running, starting it for you."
            $container
        fi
    done
}

custom_zim(){
    del_stopped zim
    docker run -it --rm -d \
       -e DISPLAY=$DISPLAY \
       -v /tmp/.X11-unix:/tmp/.X11-unix \
       -v $HOME/murt/Notes:/home/curtis/Notebooks/Notes \
       -v $HOME/Pictures/wiki:/home/curtis/Pictures/wiki \
       --name zim \
       custom/zim "$@"
}

custom_spotify(){
    del_stopped spotify
    docker run --rm -it -d \
        -v /etc/localtime:/etc/localtime:ro \
        -v /tmp/.X11-unix:/tmp/.X11-unix \
        -e DISPLAY=$DISPLAY \
        --device /dev/snd \
        --device /dev/dri \
        -v $HOME/.spotify/config:/home/spotify/.config/spotify \
        -v $HOME/.spotify/cache:/home/spotify/spotify \
        -v /run/user/1000/pulse:/run/user/1000/pulse \
        -e PULSE_SERVER=unix:/run/user/1000/pulse/native \
        --name spotify \
        --group-add $(getent group audio | cut -d: -f3) \
        custom/spotify "$@"
}

stop_slack(){
    xhost -local:root
    del_stopped slack
}

custom_slack(){
    stop_slack
    xhost +local:root
    docker run -d --rm -it \
        -v /etc/localtime:/etc/localtime:ro \
        -v /tmp/.X11-unix:/tmp/.X11-unix \
        -e DISPLAY=$DISPLAY \
        --device /dev/snd \
        --device /dev/dri \
        --group-add audio \
        -v "${HOME}/.slack:/root/.config/Slack" \
        --ipc="host" \
        --name slack \
        custom/slack 
}

custom_atom(){
    docker run -it --rm -d -v /tmp/.X11-unix:/tmp/.X11-unix \
        -e DISPLAY=unix$DISPLAY \
        -v $1 \
        custom/atom
}

custom_gzserver(){
    docker run --rm \
    -it \
    --user="3000:3000" \
    -v ~/Desktop/gazeborun:/custom \
    custom/gzserver "--default" /custom/resources/sim/worlds/rtos.world --verbose
    # -d \
    #custom/gzserver
    #--name=gzserver \
    #custom/gzserver /bin/bash
    #--user=$(id -u $(whoami)) \

}

custom_gzclient(){
    del_stopped gazeboclient
    xhost +local:root
    docker run --rm -it \
    -v /etc/localtime:/etc/localtime:ro \
    -v "/tmp/.X11-unix:/tmp/.X11-unix:rw" \
    -e DISPLAY=$DISPLAY \
    --name gazeboclient \
    custom/gazeboclient
}
