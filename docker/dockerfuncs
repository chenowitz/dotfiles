#!/bin/bash
# Bash wrappers for docker run commands
alias dl='docker ps -l -q'

dcleanup() {
    local containers
    containers=( $(docker ps -aq 2>/dev/null) )
    docker rm "${containers[@]}" 2>/dev/null
    local volumes
    volumes=( $(docker ps --filter status=exited -q 2>/dev/null) )
    docker rm -v "${volumes[@]}" 2>/dev/null
    local images
    images=( $(docker images --filter dangling=true -q 2>/dev/null) )
    docker rmi "${images[@]}" 2>/dev/null
}

del_stopped() {
    local name=$1
    local state
    state=$(docker inspect --format "{{.State.Running}}" "$name" 2>/dev/null)
    if [[ "$state" == "false" ]]; then
        docker rm "$name"
    fi
}

custom_zim() {
    del_stopped zim
    docker run --rm -it -d \
       --user=$(id -u $(whoami)) \
       -e DISPLAY=$DISPLAY \
       -v /tmp/.X11-unix:/tmp/.X11-unix \
       -v $HOME/Documents/Notebooks/Notes:/home/curtis/Notebooks/Notes \
       --name zim \
       murtis/zimwiki
}

custom_spotify() {
    del_stopped spotify
    docker run --rm -d \
        -v /etc/localtime:/etc/localtime:ro \
        -v /tmp/.X11-unix:/tmp/.X11-unix \
        -e DISPLAY=$DISPLAY \
        --device /dev/snd \
        -v $HOME/.spotify/config:/home/spotify/.config/spotify \
        -v $HOME/.spotify/cache:/home/spotify/spotify \
        -v /run/user/1000/pulse:/run/user/1000/pulse \
        -e PULSE_SERVER=unix:/run/user/1000/pulse/native \
        --name spotify \
        murtis/spotify
        #--device /dev/dri \
        #--group-add $(getent group audio | cut -d: -f3) \
    cat ~/Desktop/pw.md
}

stop_slack() {
    xhost -local:root
    del_stopped slack
}

custom_slack() {
    stop_slack
    xhost +local:root
    docker run -d --rm -it \
        -v /etc/localtime:/etc/localtime:ro \
        -v /tmp/.X11-unix:/tmp/.X11-unix \
        -e DISPLAY=$DISPLAY \
        --device /dev/snd \
        --device /dev/dri \
        --group-add audio \
        -v "${HOME}/.slack:/root/.config/Slack" \
        --ipc="host" \
        --name slack \
       murtis/slack
}

jupyter_notebook() {
  docker run -it --rm \
  -p 8888:8888 \
  -v ~/Documents/ipynb:/home/jovyan/work \
  jupyter/scipy-notebook
}

murtbuntu() {
  docker run -it --rm \
    -v ~/sbox:/home/user/sbox/ \
    --network=MURTISWAS_HERE_bazeltest \
    murtis/murtbuntu
}

winbuntu() {
  docker run -it --rm \
    -v ~/sbox:/home/user/sbox/ \
    murtis/murtbuntu
}

ros_ewok() {
  docker run --rm -it \
    --name ros_ewok \
    murtis/ewok_example
}

bazel_worker() {
  docker run --rm -it \
    --name grpc_cache_server \
    --env LISTEN_PORT=8085 \
    --env HAZELCAST_SEVER=172.17.0.3 \
    murtis/bazel_remote_worker
}

hazelcast_cache() {
  docker run --rm -it \
     --name hazelcast_server \
     hazelcast/hazelcast
}
#docker run --rm -it --name grpc_cache_server --env LISTEN_PORT=8080 murtis/bazel_grpc_cache
# +custom_gzserver(){
#  +    docker run -d --rm -it \
#  +    --name=gzserver \
#  +    custom/gazeboserver
#  +}
#  +
#  +custom_gzclient(){
#  +    del_stopped custom_gzclient
#  +    xhost +local:root
#  +    docker run --rm -it \
#  +	-v /etc/localtime:/etc/localtime:ro \
#  +	-v "/tmp/.X11-unix:/tmp/.X11-unix:rw" \
#  +	-e DISPLAY=unix$DISPLAY \
#  +	--name gazeboclient \
#  +	custom/gazeboclient
#  +
#  +}
